<%- include('../partials/header', { pageTitle: 'One City Events', styles: '../css/styles.css', event: '../css/event.css'}) %>
<link rel="stylesheet" href="../css/dashboard.css">

<div class="admin-dashboard">
  <div class="container">
    <div class="dashboard-header">
      <h2>Admin Dashboard</h2>
      <p>Event analytics and insights</p>
    </div>
    
    <div class="dashboard-actions">
        <div class="date-filter">
            <select class="form-select" id="date-range">
              <option value="7" <%= range == '7' ? 'selected' : '' %>>Last 7 Days</option>
              <option value="30" <%= range == '30' ? 'selected' : '' %>>Last 30 Days</option>
              <option value="90" <%= range == '90' ? 'selected' : '' %>>Last 90 Days</option>
              <option value="all" <%= range == 'all' ? 'selected' : '' %>>All Time</option>
            </select>
          </div>          
      <button id="print-btn" class="btn-dashboard">
        <i class="fas fa-print"></i> Export Data
      </button>
    </div>
    
    <div class="row">
      <div class="col-lg-3 col-md-6">
        <div class="dashboard-summary">
          <div class="summary-stat">
            <div class="summary-value" id="total-events">0</div>
            <div class="summary-label">Total Events</div>
          </div>
        </div>
      </div>
      <div class="col-lg-3 col-md-6">
        <div class="dashboard-summary">
          <div class="summary-stat">
            <div class="summary-value" id="total-rsvps">0</div>
            <div class="summary-label">Total RSVPs</div>
          </div>
        </div>
      </div>
      <div class="col-lg-3 col-md-6">
        <div class="dashboard-summary">
          <div class="summary-stat">
            <div class="summary-value" id="avg-rating">0</div>
            <div class="summary-label">Avg. Rating</div>
          </div>
        </div>
      </div>
      <div class="col-lg-3 col-md-6">
        <div class="dashboard-summary">
          <div class="summary-stat">
            <div class="summary-value" id="active-users">0</div>
            <div class="summary-label">Active Users</div>
          </div>
        </div>
      </div>
    </div>
    
    <div class="row">
      <div class="col-md-6">
        <div class="chart-container">
          <h4>Age Distribution</h4>
          <canvas id="ageChart" class="chart-canvas"></canvas>
        </div>
      </div>
      <div class="col-md-6">
        <div class="chart-container">
          <h4>Gender Distribution</h4>
          <canvas id="genderChart" class="chart-canvas"></canvas>
        </div>
      </div>
    </div>
    
    <div class="row">
      <div class="col-md-6">
        <div class="chart-container">
          <h4>RSVPs & Max Attendees</h4>
          <canvas id="provinceChart" class="chart-canvas"></canvas>
        </div>
      </div>
      <div class="col-md-6">
        <div class="chart-container">
          <h4>Average Event Ratings</h4>
          <canvas id="ratingChart" class="chart-canvas"></canvas>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<!-- Fixed Font Awesome CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Use <%- %> to prevent EJS from escaping the JSON
        const ageData = JSON.parse('<%- JSON.stringify(ageDistribution) %>');
        const genderData = JSON.parse('<%- JSON.stringify(genderDistribution) %>');
        const provinceData = JSON.parse('<%- JSON.stringify(eventsByProvince) %>');
        const ratingData = parseFloat('<%- averageRatings %>') || 0;

        console.log("Age Data:", ageData);
        console.log("Gender Data:", genderData);
        console.log("Province Data:", provinceData);
        console.log("Average Ratings:", ratingData);

        // Define isEmpty function first
        const isEmpty = (data) => Object.keys(data).length === 0;

        // Update summary values
        document.getElementById('avg-rating').textContent = ratingData.toFixed(1);
        
        // Calculate total RSVPs
        let totalRSVPs = 0;
        if (!isEmpty(provinceData)) {
            Object.keys(provinceData).forEach(province => {
                totalRSVPs += provinceData[province].totalRSVPs;
            });
        }
        document.getElementById('total-rsvps').textContent = totalRSVPs;
        
        // Calculate total users (from age distribution)
        let totalUsers = 0;
        if (!isEmpty(ageData)) {
            Object.values(ageData).forEach(count => {
                totalUsers += count;
            });
        }
        document.getElementById('active-users').textContent = totalUsers;
        
        // Total events (number of provinces with events)
        document.getElementById('total-events').textContent = Object.keys(provinceData).length;

        // Modern color palette
        const colors = [
            '#3498db', '#2ecc71', '#f1c40f', '#e74c3c', '#9b59b6', 
            '#1abc9c', '#34495e', '#d35400', '#16a085', '#8e44ad'
        ];

        // Age Chart
        if (!isEmpty(ageData)) {
            new Chart(document.getElementById('ageChart'), {
                type: 'bar',
                data: {
                    labels: Object.keys(ageData),
                    datasets: [{
                        label: 'Users by Age Group',
                        data: Object.values(ageData),
                        backgroundColor: colors.slice(0, Object.keys(ageData).length),
                        borderRadius: 6,
                        maxBarThickness: 40
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                display: true,
                                color: 'rgba(0, 0, 0, 0.05)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            });
        }

        // Gender Chart
        if (!isEmpty(genderData)) {
            new Chart(document.getElementById('genderChart'), {
                type: 'pie',
                data: {
                    labels: Object.keys(genderData),
                    datasets: [{
                        label: 'Users by Gender',
                        data: Object.values(genderData),
                        backgroundColor: colors.slice(0, Object.keys(genderData).length),
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 20,
                                boxWidth: 12
                            }
                        }
                    },
                    cutout: '40%'
                }
            });
        }

        // Province Chart
        if (!isEmpty(provinceData)) {
            const provinces = Object.keys(provinceData);
            const totalRSVPs = provinces.map(province => provinceData[province].totalRSVPs);
            const totalMaxAttendees = provinces.map(province => provinceData[province].totalMaxAttendees);

            new Chart(document.getElementById('provinceChart'), {
                type: 'bar',
                data: {
                    labels: provinces,
                    datasets: [
                        {
                            label: 'Total RSVPs',
                            data: totalRSVPs,
                            backgroundColor: '#3498db',
                            borderRadius: 6,
                            maxBarThickness: 40
                        },
                        {
                            label: 'Max Attendees',
                            data: totalMaxAttendees,
                            backgroundColor: '#2ecc71',
                            borderRadius: 6,
                            maxBarThickness: 40
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.05)'
                            },
                            title: {
                                display: true,
                                text: 'Count',
                                font: {
                                    size: 12
                                }
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 20,
                                boxWidth: 12
                            }
                        }
                    }
                }
            });
        }

        // Ratings Chart
        new Chart(document.getElementById('ratingChart'), {
            type: 'doughnut',
            data: {
                labels: ['Average Rating'],
                datasets: [{
                    data: [ratingData, 5 - ratingData],
                    backgroundColor: ['#f1c40f', '#ecf0f1'],
                    borderWidth: 0
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: (context) => {
                                if (context.dataIndex === 0) {
                                    return context.raw.toFixed(1) + ' / 5';
                                }
                                return '';
                            }
                        }
                    },
                    legend: {
                        display: false
                    }
                },
                cutout: '70%'
            }
        });

        document.getElementById('print-btn').addEventListener('click', () => window.print());
    });
</script>

<%- include('../partials/footer') %>