<%- include('../partials/header', { pageTitle: 'One City Events', styles: '../css/styles.css', event: '../css/event.css'}) %>

<div class="tickets-page">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="heading">
                    <h2>Admin Dashboard</h2>
                </div>
                <div class="row mt-4">
                    <div class="col-md-6 chart-container">
                        <h4>Age Distribution</h4>
                        <canvas id="ageChart" class="chart-canvas"></canvas>
                    </div>
                    <div class="col-md-6 chart-container">
                        <h4>Gender Distribution</h4>
                        <canvas id="genderChart" class="chart-canvas"></canvas>
                    </div>
                </div>
                
                <div class="row mt-4">
                    <div class="col-md-6 chart-container">
                        <h4>RSVP's And Attendees</h4>
                        <canvas id="provinceChart" class="chart-canvas"></canvas>
                    </div>
                    <div class="col-md-6 chart-container">
                        <h4>Average Event Ratings</h4>
                        <canvas id="ratingChart" class="chart-canvas"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Use <%- %> to prevent EJS from escaping the JSON
        const ageData = JSON.parse('<%- JSON.stringify(ageDistribution) %>');
        const genderData = JSON.parse('<%- JSON.stringify(genderDistribution) %>');
        const provinceData = JSON.parse('<%- JSON.stringify(eventsByProvince) %>');
        const ratingData = parseFloat('<%- averageRatings %>') || 0;

        console.log("Age Data:", ageData);
        console.log("Gender Data:", genderData);
        console.log("Province Data:", provinceData);
        console.log("Average Ratings:", ratingData);

        // Expanded color palette
        const colors = [
            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40', 
            '#E7E9ED', '#8C9EFF', '#00CC99', '#FF99CC', '#66FF66', '#FF6666'
        ];

        const isEmpty = (data) => Object.keys(data).length === 0;

        // Age Chart
        if (!isEmpty(ageData)) {
            new Chart(document.getElementById('ageChart'), {
                type: 'bar',
                data: {
                    labels: Object.keys(ageData),
                    datasets: [{
                        label: 'Users by Age Group',
                        data: Object.values(ageData),
                        backgroundColor: colors.slice(0, Object.keys(ageData).length),
                    }]
                }
            });
        }

        // Gender Chart
        if (!isEmpty(genderData)) {
            new Chart(document.getElementById('genderChart'), {
                type: 'pie',
                data: {
                    labels: Object.keys(genderData),
                    datasets: [{
                        label: 'Users by Gender',
                        data: Object.values(genderData),
                        backgroundColor: colors.slice(0, Object.keys(genderData).length),
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false, // Allow chart to resize
                    plugins: {
                        legend: {
                            position: 'bottom', // Move legend to the bottom
                        }
                    }
                }
            });
        }

        // Province Chart
        if (!isEmpty(provinceData)) {
            const provinces = Object.keys(provinceData);
            const totalRSVPs = provinces.map(province => provinceData[province].totalRSVPs);
            const totalMaxAttendees = provinces.map(province => provinceData[province].totalMaxAttendees);

            new Chart(document.getElementById('provinceChart'), {
                type: 'bar',
                data: {
                    labels: provinces,
                    datasets: [
                        {
                            label: 'Total RSVPs',
                            data: totalRSVPs,
                            backgroundColor: '#36A2EB', // Blue for RSVPs
                        },
                        {
                            label: 'Max Attendees',
                            data: totalMaxAttendees,
                            backgroundColor: '#FFCE56', // Yellow for Max Attendees
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            stacked: true, // Bars are stacked
                        },
                        y: {
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Max Attendees / Number of RSVPs'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'bottom', // Move legend to the bottom
                        },
                        tooltip: {
                            callbacks: {
                                label: (context) => {
                                    const label = context.dataset.label || '';
                                    const value = context.raw || 0;
                                    return `${label}: ${value}`;
                                }
                            }
                        }
                    }
                }
            });
        }

        // Ratings Chart
        new Chart(document.getElementById('ratingChart'), {
            type: 'doughnut',
            data: {
                labels: ['Average Rating', 'Remaining'],
                datasets: [{
                    label: 'Average Event Rating',
                    data: [ratingData, 5 - ratingData],
                    backgroundColor: [colors[0], colors[4]],
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false, // Allow chart to resize
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: (context) => context.raw.toFixed(1) + ' / 5'
                        }
                    },
                    legend: {
                        position: 'bottom', // Move legend to the bottom
                    }
                }
            }
        });

        document.getElementById('print-btn').addEventListener('click', () => window.print());
    });
</script>

<%- include('../partials/footer') %>